<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>VSCode 常用快捷鍵</title>
      <link href="posts/3547/"/>
      <url>posts/3547/</url>
      
        <content type="html"><![CDATA[<h2 id="一般">一般</h2><ul><li>命令面板：<code>F1</code></li><li>開啟終端機：<code>CTRL + ~</code></li><li>關閉當前檔案：<code>CTRL + W</code></li><li>搜尋並開啟檔案：<code>CTRL + E</code></li><li>切換已開啟的檔案：<code>CTRL + TAB</code></li><li>存檔：<code>CTRL + S</code></li></ul><h2 id="編輯">編輯</h2><ul><li>複製：<code>CTRL + C</code></li><li>複製該行（不選取）：<code>CTRL + C</code></li><li>剪下：<code>CTRL + X</code></li><li>剪下該行（不選取）：<code>CTRL + X</code></li><li>貼上：<code>CTRL + V</code></li><li>複製該行至下一行：<code>SHIFT + ALT + 方向鍵下</code></li><li>調整該行順序：<code>ALT + 方向鍵上下</code></li><li>插入下一行：<code>CTRL + ENTER</code></li><li>註解該行：<code>CTRL + /</code></li><li>前往指定行數：<code>CTRL + G</code></li><li>跳至該行首部或尾部：<code>HOME / END</code></li><li>選取：<code>SHIFT + 方向鍵左右</code></li><li>智慧選取：<code>SHIFT + CTRL + 方向鍵左右</code></li><li>多重選取：<code>ALT + CLICK</code></li><li>多重選取相同字符：<code>CTRL + F2</code></li><li>復原上一次多重選取：<code>CTRL + U</code></li></ul><h2 id="插件">插件</h2><ul><li><a href="https://marketplace.visualstudio.com/items?itemName=patbenatar.advanced-new-file">advanced-new-file</a>：<ul><li>創建檔案：指令 “<code>Advanced New File</code>” 建議設定自訂快捷建 “<code>CTRL + N</code>”</li></ul></li><li><a href="https://marketplace.visualstudio.com/items?itemName=sleistner.vscode-fileutils">File Utils</a><ul><li>重新命名：指令 “<code>File Utils: Rename</code>”</li><li>移動檔案：指令 “<code>File Utils: Move</code>”</li><li>刪除檔案：指令 “<code>File Utils: Delete</code>”</li></ul></li></ul><hr><p>封面來源 ：</p><ul><li><a href="https://www.pixiv.net/artworks/85618605">なび - Ame</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
          <category> 筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端基礎知識整理</title>
      <link href="posts/c7f3/"/>
      <url>posts/c7f3/</url>
      
        <content type="html"><![CDATA[<h2 id="請照順序食用：">請照順序食用：</h2><ol><li><a href="https://developer.mozilla.org/zh-TW/docs/Learn/Getting_started_with_the_web/How_the_Web_works">MDN - 網路如何運作</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions/What_is_a_URL">MDN - 什麼是 URL？</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions/What_is_a_domain_name">MDN - 什麼是 域名？</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions/Pages_sites_servers_and_search_engines">MDN - 網站、網頁、網路伺服器和搜尋引擎的區別是什麼？</a></li><li><a href="https://developer.mozilla.org/zh-TW/docs/Learn/Common_questions/What_is_a_web_server">MDN - 何謂網路伺服器？</a></li><li><a href="https://youtu.be/iidqJ7p7ln4">Youtube - 網路是如何運作的？</a></li><li><a href="https://youtu.be/o0dO5iXbCCs">Youtube - http 和 https 有什麼區別？</a></li><li><a href="https://youtu.be/tVNx-6OEy-k">Youtube - IPv4 和 IPv6 有什麼區別？</a></li><li><a href="https://youtu.be/2QJLxhS2lXw">Youtube - DNS 服務、DNS 解析、DNS 劫持與污染</a></li><li><a href="https://youtu.be/jaPpP3cdgDQ">Youtube - 瀏覽器運行原理</a></li><li><a href="https://dotblogs.com.tw/Im_sqz777/2017/07/26/220713">sqz777 der 技術小本本 - 相對路徑 和 絕對路徑</a></li></ol><hr><p>封面來源 ：</p><ul><li><a href="https://www.pixiv.net/artworks/81856932">とぴあ - 🌸</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 網頁前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知識整理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重新認識 HTML</title>
      <link href="posts/8f1b/"/>
      <url>posts/8f1b/</url>
      
        <content type="html"><![CDATA[<h2 id="網頁概念">網頁概念</h2><h3 id="什麼是網頁">什麼是網頁 ?</h3><p>網頁是網站中的其中一頁，通常為 HTML 格式的檔案，它需要通過瀏覽器來閱讀。</p><p>網頁是構成網站的基本元素，它通常由 圖片、連結、文字、影片、音效等元素組成。</p><p>通常網頁以 .htm 或 .html 作為副檔名，因此俗稱為 HTML 檔案。</p><h3 id="什麼是-HTML">什麼是 HTML ?</h3><p>HTML 指的是 超文本標記語言 (<u>H</u>yper <u>T</u>ext <u>M</u>arkup <u>L</u>anguage)。</p><p>HTML 不是一種程式語言，而是一種標記語言 (Markup Language)。</p><h4 id="標記-標籤">標記 / 標籤</h4><p>標記是一種行為，在 HTML 中會以標籤包裹內容組成一個元素，這個行為就叫做標記。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">標籤</span>&gt;</span>內容<span class="tag">&lt;/<span class="name">標籤</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/NekoChanTaiwan/blog@gh-pages/posts/8f1b/grumpy-cat-small.webp" alt="HTML 元素"><br>（ 圖片來源：<a href="https://developer.mozilla.org/zh-TW/docs/learn/HTML/Introduction_to_HTML/Getting_started">MDN - Getting started with HTML</a> ）<br>HTML 元素（Element）由以下組成：</p><ul><li>起始標籤（Opening tag）</li><li>結束標籤（Closing tag）</li><li>內容（Content）</li></ul><h4 id="超文本">超文本</h4><p>HTML 可以使用 圖片、影片、音效、多媒體等內容 (超越了文本限制)，<br>HTML 還可以從一個頁面跳轉到另一個頁面 (超級連結文本)。</p><h3 id="網頁的形成">網頁的形成 ?</h3><p>網頁是由網頁元素組成的，這些元素是利用 HTML 標籤描述出來的，最終會透過瀏覽器解析給使用者。</p><h3 id="總結">總結</h3><p>網頁是由 圖片、連結、文字、音效、影片等元素組成，副檔名為 html。</p><p>HTML(超文本標記語言)，用於製作網頁的一門語言，由許多標籤組成的，<br>比如 圖片標籤、連結標籤、影片標籤等等 …</p><h2 id="常用瀏覽器">常用瀏覽器</h2><p>網頁是通過瀏覽器來展示的，關於瀏覽器必需要了解以下兩點 :</p><h3 id="常見的瀏覽器有哪些">常見的瀏覽器有哪些 ?</h3><ul><li>IE / Edge</li><li>Chrome</li><li>Firefox</li><li>Safari</li><li>Opera</li></ul><p>建議使用 Chrome 做於開發使用。</p><h3 id="瀏覽器內核">瀏覽器內核</h3><p>瀏覽器內核 (渲染引擎) : 負責讀取網頁內容，計算網頁的顯示方式並顯示頁面。</p><table>    <tr>      <th>瀏覽器</th>      <th>內核</th>      <th>備註</th>    </tr>    <tr>      <td>IE</td>      <td>Trident</td>      <td></td>    </tr>    <tr>      <td>Firefox</td>      <td>Gecko</td>      <td></td>    </tr>    <tr>      <td>Safari</td>      <td>WebKit</td>      <td></td>    </tr>    <tr>      <td>Chrome / Opera</td>      <td>Blink</td>      <td>Blink 其實是 WebKit 的分支</td>    </tr></table><h2 id="Web-標準">Web 標準</h2><p>Web 標準是由 W3C 組織和其他標準化組織制定的一系列標準的集合。</p><p>W3C 是國際最著名的標準化組織。</p><h3 id="為什麼需要-Web-標準">為什麼需要 Web 標準</h3><p>瀏覽器不同，它們顯示頁面或者排版就有些差異。</p><p>如果沒有 Web 標準，我們寫出來的網頁可能在不同瀏覽器展示都會是不一樣的。</p><p>遵循 Web 標準除了可以讓不同開發人員寫出來的頁面更標準、更統一以外，還有以下優點 :</p><ul><li>讓 Web 發展前景更廣闊</li><li>內容能被更廣泛的設備使用</li><li>更容易被搜尋引擎搜到</li><li>更易於維護</li></ul><h3 id="Web-標準的構成">Web 標準的構成</h3><p>主要包括 結構 (Structure) 、 表現 (Presentation) 和 行為 (Behavior) 三個方面。</p><table>    <tr>      <th>結構</th>      <th>說明</th>    </tr>    <tr>      <td>結構 (Structure)</td>      <td>結構用於對網頁元素進行整理和分類，主要是指 HTML。</td>    </tr>    <tr>      <td>表現 (Presentation)</td>      <td>表現用於設定網頁元素的外觀樣式，主要是指 CSS。</td>    </tr>    <tr>      <td>行為 (Behavior)</td>      <td>行為式指網頁模型的定義及交互的編寫，主要是指 JavaScript。</td>    </tr></table><p>Web 標準提出的最佳體驗方案 : 結構, 樣式, 行為 相分離。</p><h3 id="總結-2">總結</h3><ul><li>結構 寫到 HTML 中</li><li>表現 寫到 CSS 中</li><li>行為 寫到 JavaScript 中</li></ul><h2 id="語法規範">語法規範</h2><h3 id="基本語法概述">基本語法概述</h3><ul><li>HTML 標籤是由尖括號包圍的關鍵字，例如 <code>&lt;html&gt;</code>。</li><li>HTML 標籤通常是成對出現的，例如 <code>html</code> 和 <code>&lt;/html&gt;</code>，稱為 雙標籤。<br>（雙標對中的第一個是開始標籤，第二個是結束標籤（注意有反斜槓）。）</li><li>有些特殊標籤必需是單個標籤（極少情況），例如<code>&lt;br /&gt;</code>，稱為 單標籤。</li></ul><h3 id="標籤關係">標籤關係</h3><p>雙標籤關係可以分為兩類：包含關係 和 並列關係。</p><p>包含關係（嵌套 / 父子） :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>並列關係（兄弟） :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="基本結構標籤">基本結構標籤</h2><p>每個網頁都會有一個基本結構標籤（也稱骨架標籤），頁面內容也是在這些基本標籤上書寫。<br>（HTML頁面 也稱為 HTML文檔）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>基本結構標籤<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    Hello, World!</span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><table>    <tr>      <th>標籤</th>      <th>定義</th>      <th>說明</th>    </tr>    <tr>      <td>&lt;html&gt;</td>      <td>文檔的根部</td>      <td>頁面中最大的標籤，稱為 <b>根標籤</b>。</td>    </tr>    <tr>      <td>&lt;head&gt;</td>      <td>文檔的頭部</td>      <td>注意在 head 標籤中必需要設定 title 標籤</td>    </tr>    <tr>      <td>&lt;title&gt;</td>      <td>文檔的標題</td>      <td>網頁標題</td>    </tr>    <tr>      <td>&lt;body&gt;</td>      <td>文檔的主體</td>      <td>頁面的內容基本都是在 body 裡面</td>    </tr></table><h3 id="心智圖">心智圖</h3><p><img src="https://cdn.jsdelivr.net/gh/NekoChanTaiwan/blog@gh-pages/posts/8f1b/html01v3.webp" alt="HTML 基本結構標籤 心智圖"></p><h3 id="重要標籤">重要標籤</h3><p>若使用 VSCode 生成 HTML基本結構，會發現有許多標籤。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>目前只需要知道三個標籤。</p><table>    <tr>      <th>標籤</th>      <th>定義</th>      <th>說明</th>    </tr>    <tr>      <td>&lt;!DOCTYPE html&gt;</td>      <td>文檔類型聲明標籤</td>      <td>用於告知瀏覽器當前的頁面是 HTML5版本</td>    </tr>    <tr>      <td>&lt;html lang="en"&gt;</td>      <td>當前頁面語言</td>      <td>用於告知瀏覽器或搜尋引擎當前頁面的語言</td>    </tr>    <tr>      <td>&lt;meta charset="UTF-8"&gt;</td>      <td>當前頁面的字符編碼</td>      <td>通常使用 UTF-8 防止出現亂碼</td>    </tr></table><h3 id="標籤語意">標籤語意</h3><p>學習標籤時，重點要記住每一個標籤的語意。</p><p>簡單理解就是指標籤的含義，在說白一點就是這標籤是用來幹嘛的。</p><p>根據標籤的語意，在合適的地方給一個最為合理的標籤，可以讓頁面結構更清晰。</p><h2 id="常用標籤">常用標籤</h2><h3 id="標題標籤">標題標籤</h3><p>為了使網頁更具有語意話，我們經常在頁面中用到標題標籤。</p><p>HTML 提供了 6 個等級的網頁標題，及 &lt;h1&gt; ~ &lt;h6&gt; 。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一級標題<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二級標題<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三級標題<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四級標題<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五級標題<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六級標題<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p>該標籤為 head 的縮寫，意味 頭部、標題。</p><p>標籤語意：作為標題使用，根據重要性遞減。</p><p>特點：</p><ul><li>使用標題標籤的文字會變粗，字號也會依次變大。</li><li>一個標題獨佔一行。</li></ul><h3 id="段落與換行標籤">段落與換行標籤</h3><p>在網頁中，要把文字有條理的顯示出來，就需要將文字分段顯示。</p><p>在 HTML 標籤中，&lt;p&gt; 用於定義段落。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>該標籤為 paragraph 的縮寫，意味 段落。</p><p>標籤語意：為文字分割段落。</p><p>特點：</p><ul><li>在段落中的文字會根據瀏覽器窗口的大小自動換行。</li><li>段落和段落之間會有空隙。</li></ul><hr><p>在 HTML 中，一個段落中的文字會從左到右依次排列，直到瀏覽器窗口的右端，然後才自動換行。</p><p>如果希望某段文字強制換行，就需要使用 &lt;br /&gt;。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>該標籤為 break 的縮寫，意味 打斷、換行。</p><p>標籤語意：強制換行。</p><p>特點：</p><ul><li>&lt;br /&gt; 是單標籤。</li><li>&lt;br /&gt; 標籤是強制換行，跟段落之間不一樣，段落之間會有空隙。</li></ul><h3 id="文字格式化標籤">文字格式化標籤</h3><p>在網頁中有時需要為文字設定 <strong>粗體</strong>、<em>斜體</em>、<ins>下劃線</ins>、<del>刪除線</del>等效果，這時就需要用到 HTML 中的文字格式化標籤，使文字以特殊的方式顯示。</p><p>標籤語意：突出重要性，比普通文字更重要。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">我是<span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>的文字</span><br><span class="line">我是<span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span>的文字</span><br><span class="line"></span><br><span class="line">我是<span class="tag">&lt;<span class="name">em</span>&gt;</span>傾斜<span class="tag">&lt;/<span class="name">em</span>&gt;</span>的文字</span><br><span class="line">我是<span class="tag">&lt;<span class="name">i</span>&gt;</span>傾斜<span class="tag">&lt;/<span class="name">i</span>&gt;</span>的文字</span><br><span class="line"></span><br><span class="line">我是<span class="tag">&lt;<span class="name">del</span>&gt;</span>刪除線<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line">我是<span class="tag">&lt;<span class="name">s</span>&gt;</span>刪除線<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line"></span><br><span class="line">我是<span class="tag">&lt;<span class="name">ins</span>&gt;</span>下劃線<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line">我是<span class="tag">&lt;<span class="name">u</span>&gt;</span>下劃線<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></table></figure><table>    <tr>      <th>語意</th>      <th>標籤</th>      <th>說明</th>    </tr>    <tr>      <td>加粗</td>      <td>&lt;strong&gt; 或 &lt;b&gt;</td>      <td>更推薦使用 &lt;strong&gt; 標籤，語意更強烈。</td>    </tr>    <tr>      <td>傾斜</td>      <td>&lt;em&gt; 或 &lt;i&gt;</td>      <td>更推薦使用 &lt;em&gt; 標籤，語意更強烈。</td>    </tr>    <tr>      <td>下劃線</td>      <td>&lt;ins&gt; 或 &lt;u&gt;</td>      <td>更推薦使用 &lt;ins&gt; 標籤，語意更強烈。</td>    </tr>    <tr>      <td>刪除線</td>      <td>&lt;del&gt; 或 &lt;s&gt;</td>      <td>更推薦使用 &lt;del&gt; 標籤，語意更強烈。</td>    </tr></table><h3 id="盒子標籤">盒子標籤</h3><p>&lt;div&gt; 和 &lt;span&gt; 是沒有語意的，它們就只是個盒子，用來裝內容的。</p><p>主要用途是用來布局，在學習 CSS 時才能真正理解這兩個標籤的用途。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>DIV標籤<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>SPAN標籤<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>特點：</p><ul><li>&lt;div&gt; 標籤用於布局，但是現在一行只能放一個&lt;div&gt;。(大盒子)</li><li>&lt;span&gt; 標籤用於布局，一行上可以有多個&lt;span&gt;。(小標籤)</li></ul><h3 id="圖片標籤">圖片標籤</h3><p>在 HTML 中 &lt;img&gt; 用於定義頁面中的圖片。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;圖片路徑&#x27;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>該標籤為 image 的縮寫，意味 圖片。</p><p>src 是 &lt;img&gt; 必需的屬性。</p><p>屬性通常以 鍵值對 來表示，鍵值對會有一個 鍵名(key) 和 鍵值(value)。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">鍵名: 鍵值</span><br><span class="line">key: value</span><br></pre></td></tr></table></figure><p>屬性就代表元素的特性。</p><p>圖片標籤的屬性 :</p><table>    <tr>      <th>屬性</th>      <th>屬性值</th>      <th>說明</th>    </tr>    <tr>      <td>src</td>      <td>圖片路徑</td>      <td>必需屬性</td>    </tr>    <tr>      <td>alt</td>      <td>文字</td>      <td>替換文字，當圖片顯示不出來時顯示。</td>    </tr>    <tr>      <td>title</td>      <td>文字</td>      <td>提示文字，當游標移至圖片上時顯示。</td>    </tr>    <tr>      <td>width</td>      <td>像素</td>      <td>圖片的寬度</td>    </tr>    <tr>    <td>height</td>      <td>像素</td>      <td>圖片的高度</td>    </tr>    <tr>    <td>border</td>      <td>像素</td>      <td>圖片邊框的粗細</td>    </tr></table><p>屬性沒有先後順序，屬性必需寫在標籤名後面。</p><h3 id="超連結標籤">超連結標籤</h3><p>&lt;a&gt; 用於定義超連結，作用是從一個頁面連結到另一個頁面。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;跳轉目標&quot;</span> <span class="attr">target</span>=<span class="string">&quot;連結頁面的開啟方式&quot;</span>&gt;</span>文字或圖片<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>該標籤為 anchor 的縮寫，意味 錨。</p><table>    <tr>      <th>屬性</th>      <th>作用</th>    </tr>    <tr>      <td>href</td>      <td>必需屬性，用於指定連結的 url 地址。</td>    </tr>    <tr>      <td>target</td>      <td>用於指定連結頁面的開啟方式，默認為 self，_blank 為在新頁面開啟。</td>    </tr></table><p>連結分類 :</p><ul><li>外部連結 :如 <code>&lt;a href=&quot;https://www.google.com.tw/&quot;&gt;Google&lt;/a&gt;</code></li><li>內部連結 :<code>&lt;a href=&quot;./page2.html&quot;&gt;Go Page 2&lt;/a&gt;</code></li><li>空連結 :<code>&lt;a href=&quot;#&quot;&gt;Home&lt;/a&gt;</code></li><li>下載連結 :<code>&lt;a href=&quot;./file.zip&quot;&gt;Download&lt;/a&gt;</code></li><li>網頁元素連結 :<code>&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;./img/xxx.png&quot;&gt;&lt;/a&gt;</code></li><li>錨點連結 : <code>&lt;a href=&quot;#title&quot;&gt;Go to title&lt;/a&gt;</code></li></ul><h3 id="註釋標籤">註釋標籤</h3><p>如果要在 HTML 添加方便閱讀和理解的文字但又不想顯示在頁面上，就需要註釋標籤。</p><p>HTML 中的註釋以 <code>&lt;!--</code> 開頭 <code>--&gt;</code> 結尾，被註釋標籤包裹的內容都不會被渲染到頁面上。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;p&gt;段落&lt;/p&gt; --&gt;</span></span><br></pre></td></tr></table></figure><div class="note info flat"><p>提示 : VSCode 快捷鍵 : Ctrl + /</p></div><h3 id="轉義字符">轉義字符</h3><p>在 HTML 中有一些特殊符號無法直接使用，此時可以使用轉義字符來替代。</p><p>通常只需要記住 空格、大於號、小於號。</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Entity#%E4%BF%9D%E7%95%99%E5%AD%97%E7%AC%A6">詳細閱讀</a></p><h3 id="表格標籤">表格標籤</h3><p>在 HTML 中表格是用於展示數據，而不是布局。</p><h4 id="基本標籤">基本標籤</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>性別<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>年齡<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Pekora<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>18<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Sakura Miko<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>16<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>Fubuki<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>女<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>17<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table>    <tr>      <th>語意</th>      <th>標籤</th>      <th>說明</th>    </tr>    <tr>      <td>容器</td>      <td>&lt;table&gt;</td>      <td>表格最外層的容器</td>    </tr>    <tr>      <td>行</td>      <td>&lt;tr&gt;</td>      <td>表格中的每一行</td>    </tr>    <tr>    </tr>      <td>表頭單元格</td>      <td>&lt;th&gt;</td>      <td>表格中的第一行單元格（加粗、居中）</td>    <tr>      <td>單元格</td>      <td>&lt;td&gt;</td>      <td>行中的單元格</td>    </tr></table><h4 id="容器屬性">容器屬性</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;2&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table>    <tr>      <th>屬性</th>      <th>屬性值</th>      <th>說明</th>    </tr>    <tr>      <td>align</td>      <td>left, center, right</td>      <td>規定表格相對元素的對其方式</td>    </tr>    <tr>      <td>border</td>      <td>像素</td>      <td>表格邊框</td>    </tr>    <tr>      <td>cellpadding</td>      <td>像素</td>      <td>單元格與內容的距離</td>    </tr>    <tr>      <td>cellspacing</td>      <td>像素</td>      <td>單元格與單元格的間距</td>    </tr></table><div class="note info flat"><p>提示 : 該屬性在實際開發時不常使用，通常都使用 CSS 取代。<br>【 Web 標準提出的最佳體驗方案 : 結構, 樣式, 行為 相分離 】</p></div><h4 id="結構標籤">結構標籤</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table>    <tr>      <th>語意</th>      <th>標籤</th>      <th>說明</th>    </tr>    <tr>      <td>表格頭部</td>      <td>&lt;thead&gt;</td>      <td>表格標籤的頭部區域，必需擁有 &lt;th&gt;，一般位於第一行。</td>    </tr>    <tr>      <td>表格主體</td>      <td>&lt;tbody&gt;</td>      <td>表格標籤的主體區域</td>    </tr></table><p>使用場景 : 表格數據可能非常多，為了更好表示表格的語意，可以將表格分成頭部語主體。</p><div class="note info flat"><p>提示 : 結構標籤都是在 &lt;table&gt; 裡面。</p></div><h4 id="合併-擴展-單元格">合併(擴展) 單元格</h4><p>合併單元格其實是擴展單元格。</p><p>在進行擴展單元格時先找出哪個是 目標單元格，擴展後再把多餘的單元格刪除。</p><p>目標單元格 : 擴展開始的單元格。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;50&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;td&gt;&lt;/td&gt; --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;td&gt;&lt;/td&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table>    <tr>      <th>屬性</th>      <th>屬性值</th>      <th>說明</th>    </tr>    <tr>      <td>colspan</td>      <td>擴展單元格數量</td>      <td>跨列擴展</td>    </tr>    <tr>      <td>rowspan</td>      <td>擴展單元格數量</td>      <td>擴行擴展</td>    </tr></table><h3 id="列表標籤">列表標籤</h3><p>列表是用來布局的。<br>列表最大的特點就是 整齊、有序。</p><p>根據使用場景不同，列表可以分為三大類：無序列表、有序列表、字定義列表。</p><h4 id="無序列表">無序列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>無序列表項<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>無序列表項<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>無序列表項<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>無序列表的各項列表項沒有順序級別之分，是並列的。</li><li>&lt;ul&gt; 裡只能嵌套 &lt;li&gt;。</li><li>&lt;li&gt; 相當於一個容器，可容納所有元素。</li><li>無序列表會帶有自己的樣式屬性，但實際開發時，我們會使用 CSS 來修改。</li></ul><h4 id="有序列表">有序列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>有序列表項<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>有序列表項<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>有序列表項<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>&lt;ol&gt; 裡只能嵌套 &lt;li&gt;。</li><li>&lt;li&gt; 相當於一個容器，可容納所有元素。</li><li>有列表會帶有自己的樣式屬性，但實際開發時，我們會使用 CSS 來修改。</li></ul><div class="note info flat"><p>提示 : 有序列表在實際開發時，使用的不多。</p></div><h4 id="自定義列表">自定義列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>自定義列表標題<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>自定義列表項<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>自定義列表項<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>自定義列表項<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>&lt;dl&gt; 裡只能嵌套 &lt;dt&gt; 和 &lt;dd&gt;。</li><li>&lt;dt&gt; 和 &lt;dd&gt; 相當於一個容器，可容納所有元素。</li><li>自定義列表項會帶有自己的樣式屬性，但實際開發時，我們會使用 CSS 來修改。</li></ul><h3 id="表單標籤">表單標籤</h3><h4 id="表單組成">表單組成</h4><p>一個完整的表單通常由 表單域、表單元素、提示元素 3 個部分組成。</p><h4 id="表單域">表單域</h4><p>表單域是一個包含表單元素的區域。<br>&lt;form&gt; 用於定義表單域，以實現用戶資訊的收集和傳遞。</p><p>&lt;form&gt; 會把它所包含的保單元素提交給伺服器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;後台地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表單域名稱&quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>常用屬性 :</p><table>    <tr>      <th>屬性</th>      <th>屬性值</th>      <th>說明</th>    </tr>    <tr>      <td>action</td>      <td>後台地址</td>      <td>指定要發送的伺服器的 url 地址</td>    </tr>    <tr>      <td>method</td>      <td>get / post</td>      <td>發送提交的方式</td>    </tr>    <tr>      <td>name</td>      <td>名稱</td>      <td>指定當前表當域的名稱</td>    </tr></table><h4 id="表單元素">表單元素</h4><p>表單元素也稱表單控件，這些表單元素就是允許用戶在表單輸入或選擇的內容控件。</p><h5 id="輸入框">輸入框</h5><p>type 屬性可以讓 &lt;input&gt; 變成不同型態。</p><p>type 屬性的屬性值 :</p><table>    <tr>      <th>屬性值</th>      <th>說明</th>    </tr>    <tr>      <td>text</td>      <td>一般輸入框</td>    </tr>    <tr>      <td>password</td>      <td>密碼輸入框，字符會被隱藏。</td>    </tr>    <tr>      <td>radion</td>      <td>單選框</td>    </tr>    <tr>      <td>checkbox</td>      <td>複選框</td>    </tr>    <tr>      <td>submit</td>      <td>提交表單（發送至後台）</td>    </tr>    <tr>      <td>reset</td>      <td>重置表單（還原默認值）</td>    </tr>    <tr>      <td>button</td>      <td>普通按鈕（通常搭配 JavaScript）</td>    </tr>    <tr>      <td>file</td>      <td>檔案上傳</td>    </tr></table><p>除了 type 屬性外，還有其他常用的屬性 :</p><table>    <tr>      <th>屬性</th>      <th>屬性值</th>      <th>說明</th>    </tr>    <tr>      <td>name</td>      <td>自定義</td>      <td>定義 input 元素的名稱</td>    </tr>    <tr>      <td>value</td>      <td>自定義</td>      <td>定義 input 元素的值</td>    </tr>    <tr>      <td>checked</td>      <td>checked</td>      <td>定義 input 默認選中</td>    </tr>    <tr>      <td>maxlength</td>      <td>正整數</td>      <td>規定輸入的最大字符</td>    </tr></table><ul><li>name 和 value 是每個表單元素都有的屬性值，主要給後端人員使用。</li><li>vale 對於輸入框是屬於默認值。</li><li>單選框 和 複選框 各別要有相同的 name 值。</li><li>checked 屬性主要針對 單選框 和 複選。</li><li>maxlength 開發時使用較少，通常使用正則表達式代替。</li></ul><h5 id="表單說明">表單說明</h5><p>&lt;label&gt; 用於快速選取表單元素。（選取文字即可快速選中表單元素）</p><p>方法一 for屬性 與 id屬性 對應 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;name&quot;</span>&gt;</span>使用者名稱: <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;NekoChan&quot;</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;pw&quot;</span>&gt;</span>使用者密碼: <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;pw&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方法二 嵌套 :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    使用者名稱:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;NekoChan&quot;</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    使用者密碼:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="下拉選擇框">下拉選擇框</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>選項一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>=<span class="string">&quot;selected&quot;</span>&gt;</span>選項二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>選項三<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>&lt;select&gt; 必需包含一個 &lt;option&gt;。</li><li>&lt;option&gt; 定義 <code>selected=&quot;selected&quot;</code> 代表默認選中項。</li></ul><h5 id="多行文本域">多行文本域</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文檔">文檔</h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element">MDN - HTML 元素</a></li></ul><hr><p>封面來源 ：</p><ul><li><a href="https://www.pixiv.net/artworks/83312954">なかしよん - 怒った余！！！💢💢</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 網頁前端 </category>
          
          <category> 重新認識 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 陣列方法</title>
      <link href="posts/209a/"/>
      <url>posts/209a/</url>
      
        <content type="html"><![CDATA[<h2 id="心智圖">心智圖</h2><p><img src="https://cdn.jsdelivr.net/gh/NekoChanTaiwan/blog@gh-pages/posts/209a/array_v5.webp" alt="JavaScript 陣列方法 - 心智圖"></p><div class="note info flat"><p>帶有 引號(＂) 代表會修改原陣列。<br>split 是字符串方法但會返回陣列。</p></div><h2 id="語法與說明">語法與說明</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure><div class="note info flat"><p>以下&quot;大部分&quot;的案例都會使用上方的變量。</p></div><h3 id="添加">添加</h3><h4 id="push">push</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    從陣列尾部添加 n 個元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.push(...elemN)</span></span><br><span class="line"><span class="comment"> *      - ...elemN : 添加 n 個元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    該陣列添加元素後的長度(length屬性)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法會修改原陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.push(<span class="number">9</span>, <span class="number">8</span>)) <span class="comment">// 7</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [1, 2, 3, 4, 5, 9, 8]</span></span><br></pre></td></tr></table></figure><h4 id="unshift">unshift</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    從陣列頭部添加 n 個元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.unshift(...elemN)</span></span><br><span class="line"><span class="comment"> *      - ...elemN : 添加 n 個元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    該陣列添加元素後的長度(length屬性)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法會修改原陣列。</span></span><br><span class="line"><span class="comment"> *    如果該陣列的元素非常多，可能會有索引值更新的效能問題。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.unshift(<span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>)) <span class="comment">// 8</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [9, 8, 7, 1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h3 id="刪除">刪除</h3><h4 id="pop">pop</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    從陣列尾部移除 1 個元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.pop()</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    移除的元素；若陣列為空則返回 undefined</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法會修改原陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.pop()) <span class="comment">// 5</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure><h4 id="shift">shift</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    從陣列頭部移除 1 個元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.shift()</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    移除的元素；若陣列為空則返回 undefined</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法會修改原陣列。</span></span><br><span class="line"><span class="comment"> *    如果該陣列的元素非常多，可能會有索引值更新的效能問題。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.shift()) <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h4 id="splice">splice</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    從 開始索引值 開始刪除 n 個元素，</span></span><br><span class="line"><span class="comment"> *    接著再添加 n 個元素。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.splice(start[, deleteCount, ...elemN])</span></span><br><span class="line"><span class="comment"> *      - start : 開始索引值</span></span><br><span class="line"><span class="comment"> *      - deleteCount [可選] : 刪除數量，不寫則刪除開始索引值後的所有元素</span></span><br><span class="line"><span class="comment"> *      - ...elemN [可選] : 添加 n 個元素</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    被移除的元素組成的陣列；沒有刪除則返回空陣列</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法會修改原陣列。</span></span><br><span class="line"><span class="comment"> *    包括開始索引值。</span></span><br><span class="line"><span class="comment"> *    如果該陣列的元素非常多，可能會有索引值更新的效能問題。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.splice(<span class="number">2</span>, <span class="number">3</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>)) <span class="comment">// [3, 4, 5]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [1, 2, 3, 9, 8, 7]</span></span><br></pre></td></tr></table></figure><h3 id="轉換">轉換</h3><h4 id="fill">fill</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    使一個值來填充陣列，可指定開始索引值及結束索引值。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.fill(value[, start, end])</span></span><br><span class="line"><span class="comment"> *      - value : 用於填充的值</span></span><br><span class="line"><span class="comment"> *      - start [可選] : 開始索引值；預設為 0</span></span><br><span class="line"><span class="comment"> *      - end [可選] : 結束索引值；預設為陣列長度（.length）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    填充後的原陣列</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法會修改原陣列。</span></span><br><span class="line"><span class="comment"> *    包括開始索引值。</span></span><br><span class="line"><span class="comment"> *    不包括結束索引值。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.fill(<span class="number">2</span>, <span class="number">1</span>, <span class="number">7</span>)) <span class="comment">// [1, 2, 2, 2, 2, 2, 2]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [1, 2, 2, 2, 2, 2, 2]</span></span><br></pre></td></tr></table></figure><h4 id="sort">sort</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    按照 原位(in-place)排序，更改元素的順序。(原位代表自身陣列內)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.sort([compareFunction])</span></span><br><span class="line"><span class="comment"> *      - compareFunction [可選] : 排序函式，會自動傳入兩個參數。</span></span><br><span class="line"><span class="comment"> *       （預設按照字符串的 Unicode 位點進行排序，可以傳入一個排序函式自訂排序方式）</span></span><br><span class="line"><span class="comment"> *        - firstEl : 第一個用於比較的元素</span></span><br><span class="line"><span class="comment"> *        - secondE1 : 第二個用於比較的元素</span></span><br><span class="line"><span class="comment"> *        - 返回值 : 會影響元素的排序</span></span><br><span class="line"><span class="comment"> *            - 小於 0 : 第一個元素 會被排到 第二個元素 之前</span></span><br><span class="line"><span class="comment"> *            - 等於 0 : 不變</span></span><br><span class="line"><span class="comment"> *            - 大於 0 : 第一個元素 會被排到 第二個元素 後面</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    排序後的原陣列</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法會修改原陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> compareFunction = <span class="function">(<span class="params">firstEl, secondEl</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (firstEl &lt; secondEl) <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">  <span class="keyword">if</span> (firstEl &gt; secondEl) <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1.sort(compareFunction)) <span class="comment">// [5, 4, 3, 2, 1]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [5, 4, 3, 2, 1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 箭頭函數 + 返回值的正負特性</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 當 第二個元素(b) 減 第一個元素(a) 的值</span></span><br><span class="line"><span class="comment"> *  - 小於 0 : 第一個元素 會被排到 第二個元素 之前</span></span><br><span class="line"><span class="comment"> *  - 等於 0 : 不變</span></span><br><span class="line"><span class="comment"> *  - 大於 0 : 第一個元素 會被排到 第二個元素 後面</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr2.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> b - a)) <span class="comment">// [10, 9, 8, 7, 6]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr2) <span class="comment">// [10, 9, 8, 7, 6]</span></span><br></pre></td></tr></table></figure><h4 id="reverse">reverse</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    顛倒陣列。（第一個元素變成最後一個，最後一個元素變成第一個）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.reverse()</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    顛倒後的原陣列</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法會修改原陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.reverse()) <span class="comment">// [5, 4, 3, 2, 1]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [5, 4, 3, 2, 1]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.reverse()) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h3 id="搜尋">搜尋</h3><h4 id="filter">filter</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    根據回調函式過濾後返回新的陣列</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.filter(callback(element[, index, array), thisArg])</span></span><br><span class="line"><span class="comment"> *      - callback : 回調函式，用於遍歷測試陣列中的每個元素。</span></span><br><span class="line"><span class="comment"> *          返回 true 代表通過測試，保留該元素，</span></span><br><span class="line"><span class="comment"> *          返回 false 則不保留。</span></span><br><span class="line"><span class="comment"> *        - element : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *        - index [可選] : 當前遍歷到的元素索引值</span></span><br><span class="line"><span class="comment"> *        - array [可選] : 調用 filter 的陣列自身</span></span><br><span class="line"><span class="comment"> *      - thisArg [可選] : 指定 callback 裡的 this 值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    通過回調函式保留元素後的新陣列</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    返回值類型一定是陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.filter(<span class="function"><span class="params">elem</span> =&gt;</span> elem % <span class="number">2</span> == <span class="number">0</span>)) <span class="comment">// [2, 4]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.filter(<span class="function"><span class="params">elem</span> =&gt;</span> elem % <span class="number">2</span> !== <span class="number">0</span>)) <span class="comment">// [1, 3, 5]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.filter(<span class="function"><span class="params">elem</span> =&gt;</span> elem &gt; <span class="number">2</span>)) <span class="comment">// [3, 4, 5]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.filter(<span class="function"><span class="params">elem</span> =&gt;</span> elem == <span class="number">4</span>)) <span class="comment">// [4]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1)) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h4 id="find-findIndex">find / findIndex</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    - find : 根據回調函式返回第一個滿足的元素。</span></span><br><span class="line"><span class="comment"> *    - findIndex : 根據回調函式返回第一個滿足的元素索引值。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.find(callback(element[, index, array), thisArg])</span></span><br><span class="line"><span class="comment"> *      - callback : 回調函式，用於遍歷測試陣列中的每個元素。</span></span><br><span class="line"><span class="comment"> *          返回 true 代表通過測試，&quot;返回該元素&quot; 並停止遍歷。</span></span><br><span class="line"><span class="comment"> *        - element : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *        - index [可選] : 當前遍歷到的元素索引值</span></span><br><span class="line"><span class="comment"> *        - array [可選] : 調用 filter 的陣列自身</span></span><br><span class="line"><span class="comment"> *      - thisArg [可選] : 指定 callback 裡的 this 值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    array.findIndex(callback(element[, index, array), thisArg])</span></span><br><span class="line"><span class="comment"> *      - callback : 回調函式，用於遍歷測試陣列中的每個元素。</span></span><br><span class="line"><span class="comment"> *          返回 true 代表通過測試，&quot;返回該元素的索引值&quot; 並停止遍歷。</span></span><br><span class="line"><span class="comment"> *        - element : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *        - index [可選] : 當前遍歷到的元素索引值</span></span><br><span class="line"><span class="comment"> *        - array [可選] : 調用 filter 的陣列自身</span></span><br><span class="line"><span class="comment"> *      - thisArg [可選] : 指定 callback 裡的 this 值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    - find : 通過回調函式後的 元素</span></span><br><span class="line"><span class="comment"> *    - findIndex : 通過回調函式後的 元素索引值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    返回值的類型不一定是陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.find(<span class="function"><span class="params">elem</span> =&gt;</span> elem % <span class="number">2</span> == <span class="number">0</span>)) <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.find(<span class="function"><span class="params">elem</span> =&gt;</span> elem % <span class="number">2</span> !== <span class="number">0</span>)) <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.find(<span class="function"><span class="params">elem</span> =&gt;</span> elem &gt; <span class="number">2</span>)) <span class="comment">// 3</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.find(<span class="function"><span class="params">elem</span> =&gt;</span> elem == <span class="number">4</span>)) <span class="comment">// 4</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1.findIndex(<span class="function"><span class="params">elem</span> =&gt;</span> elem % <span class="number">2</span> == <span class="number">0</span>)) <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.findIndex(<span class="function"><span class="params">elem</span> =&gt;</span> elem % <span class="number">2</span> !== <span class="number">0</span>)) <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.findIndex(<span class="function"><span class="params">elem</span> =&gt;</span> elem &gt; <span class="number">2</span>)) <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.findIndex(<span class="function"><span class="params">elem</span> =&gt;</span> elem == <span class="number">4</span>)) <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h4 id="indexOf-lastIndexOf">indexOf / lastIndexOf</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    - indexOf : 根據傳入的值返回第一個查找到的元素索引值。（從頭部開始查找）</span></span><br><span class="line"><span class="comment"> *    - lastIndexOf : 根據傳入的值返回第一個查找到的的元素索引值。（從尾部開始查找）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.indexOf(searchElement[, fromIndex])</span></span><br><span class="line"><span class="comment"> *      - searchElement : 要查找的元素</span></span><br><span class="line"><span class="comment"> *      - fromIndex [可選] : 開始查找的索引值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    array.lastIndexOf(searchElement[, fromIndex])</span></span><br><span class="line"><span class="comment"> *      - searchElement : 要查找的元素</span></span><br><span class="line"><span class="comment"> *      - fromIndex [可選] : 開始查找的索引值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    - indexOf : 查找到元素的索引值，若查找不到則返回 -1</span></span><br><span class="line"><span class="comment"> *    - lastIndexOf : 查找到元素的索引值，若查找不到則返回 -1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    indexOf 與 lastIndexOf 都是採用嚴格相等，嚴格相等對 NaN 無效。</span></span><br><span class="line"><span class="comment"> *    如果想要查找的元素離頭部比較近則使用 indexOf，否則使用 lastIndexOf，</span></span><br><span class="line"><span class="comment"> *      如果該陣列的元素非常多，可能會有查找速度緩慢的問題。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.indexOf(<span class="number">3</span>)) <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.indexOf(<span class="number">3</span>, <span class="number">3</span>)) <span class="comment">// -1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.indexOf(<span class="string">&#x27;3&#x27;</span>)) <span class="comment">// -1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1.lastIndexOf(<span class="number">3</span>)) <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.lastIndexOf(<span class="number">3</span>, <span class="number">1</span>)) <span class="comment">// -1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.lastIndexOf(<span class="string">&#x27;3&#x27;</span>)) <span class="comment">// -1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr3 = [<span class="literal">NaN</span>]</span><br><span class="line"><span class="built_in">console</span>.log(arr3.indexOf(<span class="literal">NaN</span>)) <span class="comment">// -1</span></span><br><span class="line"><span class="built_in">console</span>.log(arr3.lastIndexOf(<span class="literal">NaN</span>)) <span class="comment">// -1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h4 id="includes">includes</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    根據傳入的值如果找到則返回布林值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.includes(searchElement[, fromIndex])</span></span><br><span class="line"><span class="comment"> *      - searchElement : 要查找的元素</span></span><br><span class="line"><span class="comment"> *      - fromIndex [可選] : 開始查找的索引值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    根據傳入的值如果找到則返回 true　否則返回 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.includes(<span class="number">3</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.includes(<span class="number">3</span>, <span class="number">3</span>)) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.includes(<span class="string">&#x27;3&#x27;</span>)) <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr3 = [<span class="literal">NaN</span>]</span><br><span class="line"><span class="built_in">console</span>.log(arr3.includes(<span class="literal">NaN</span>)) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h3 id="遍歷">遍歷</h3><h4 id="for-…-of">for … of</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    對可疊代物件進行遍歷（包括 Array, Map, Set, String, TypedArray, arguments 等等）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    for (variable of iterable) &#123;</span></span><br><span class="line"><span class="comment"> *      ...</span></span><br><span class="line"><span class="comment"> *    &#125;</span></span><br><span class="line"><span class="comment"> *      - variable : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *      - iterable : 可疊代物件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> arr1) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line"><span class="comment">// 5</span></span><br></pre></td></tr></table></figure><h4 id="forEach">forEach</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    對陣列中的每個元素調用一次指定的函示</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.forEach(callback(item[, index, array), thisArg])</span></span><br><span class="line"><span class="comment"> *      - callback : 回調函式，該函式會對每一個元素調用一次。</span></span><br><span class="line"><span class="comment"> *        - item : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *        - index [可選] : 當前遍歷到的元素索引值</span></span><br><span class="line"><span class="comment"> *        - array [可選] : 調用 forEach 的陣列自身</span></span><br><span class="line"><span class="comment"> *      - thisArg [可選] : 指定 callback 裡的 this 值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">arr1.forEach(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(item)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="comment">// 4</span></span><br><span class="line"><span class="comment">// 5</span></span><br></pre></td></tr></table></figure><h4 id="reduce-reduceRight">reduce / reduceRight</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    對陣列中的每個元素進行累加計算</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.reduce(callback(accumulator, item[, index, array), initial])</span></span><br><span class="line"><span class="comment"> *      - callback : 回調函式，該函式會對每一個元素調用一次。</span></span><br><span class="line"><span class="comment"> *        - accumulator : 用於累加上一個函式返回的結果，；第一次等於 initial（如果有的話）。</span></span><br><span class="line"><span class="comment"> *        - item : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *        - index [可選] : 當前遍歷到的元素索引值</span></span><br><span class="line"><span class="comment"> *        - array [可選] : 調用 forEach 的陣列自身</span></span><br><span class="line"><span class="comment"> *      - initial [可選] : 指定 accumulator 的初始值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    返回 accumulator 累加後的結果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.reduce(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum + item)) <span class="comment">// 15</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.reduce(<span class="function">(<span class="params">sum, item</span>) =&gt;</span> sum + item + <span class="number">1</span>, <span class="number">100</span>)) <span class="comment">// 120</span></span><br></pre></td></tr></table></figure><h4 id="map">map</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    對陣列中的每個元素調用指定函示，並返回陣列結果</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.map(callback(item[, index, array), thisArg])</span></span><br><span class="line"><span class="comment"> *      - callback : 回調函式，該函式會對每一個元素調用一次。</span></span><br><span class="line"><span class="comment"> *        - item : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *        - index [可選] : 當前遍歷到的元素索引值</span></span><br><span class="line"><span class="comment"> *        - array [可選] : 調用 forEach 的陣列自身</span></span><br><span class="line"><span class="comment"> *      - thisArg [可選] : 指定 callback 裡的 this 值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    將每個回調函式返回的結果按照順序作為新的陣列中的元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.map(<span class="function"><span class="params">item</span> =&gt;</span> item * <span class="number">2</span>)) <span class="comment">// [2, 4, 6, 8, 10]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.map(<span class="function">(<span class="params">item, index</span>) =&gt;</span> [index, item * <span class="number">2</span>]))</span><br><span class="line"><span class="comment">// [[0, 2], [1, 4], [2, 6], [3, 8], [4, 10]]</span></span><br></pre></td></tr></table></figure><h4 id="flat">flat</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    按照指定的深度遞規遍歷陣列，並將遍歷到的所有元素合併至新陣列並返回</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.flat([depth])</span></span><br><span class="line"><span class="comment"> *      - depth [可選] : 指定深度；預設為 1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    根據深度所返回的所有元素並合併後的陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> test = [<span class="number">1</span>, [<span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, [<span class="number">5</span>]]]</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(test.flat()) <span class="comment">// [1, 2, 3, 4, [5]]</span></span><br><span class="line"><span class="built_in">console</span>.log(test.flat(<span class="number">2</span>)) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><h4 id="flatMap">flatMap</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    具有 flat(1) 和 map 的特性</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.flatMap(callback(item[, index, array), thisArg])</span></span><br><span class="line"><span class="comment"> *      - callback : 回調函式，該函式會對每一個元素調用一次。</span></span><br><span class="line"><span class="comment"> *        - item : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *        - index [可選] : 當前遍歷到的元素索引值</span></span><br><span class="line"><span class="comment"> *        - array [可選] : 調用 forEach 的陣列自身</span></span><br><span class="line"><span class="comment"> *      - thisArg [可選] : 指定 callback 裡的 this 值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    將每個回調函式返回的結果，按照順序作為新陣列中的元素（具有 flat 深度為 1 的特性）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> test = [<span class="string">&#x27;今天天氣真不錯&#x27;</span>, <span class="string">&#x27;，&#x27;</span>, <span class="string">&#x27;早上好！&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(test.flatMap(<span class="function"><span class="params">item</span> =&gt;</span> item.split(<span class="string">&#x27;&#x27;</span>)))</span><br><span class="line"><span class="comment">// [&#x27;今&#x27;, &#x27;天&#x27;, &#x27;天&#x27;, &#x27;氣&#x27;, &#x27;真&#x27;, &#x27;不&#x27;, &#x27;錯&#x27;, &#x27;，&#x27;, &#x27;早&#x27;, &#x27;上&#x27;, &#x27;好&#x27;, &#x27;！&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 對比 map</span></span><br><span class="line"><span class="built_in">console</span>.log(test.map(<span class="function"><span class="params">item</span> =&gt;</span> item.split(<span class="string">&#x27;&#x27;</span>)))</span><br><span class="line"><span class="comment">// [[&#x27;今&#x27;, &#x27;天&#x27;, &#x27;天&#x27;, &#x27;氣&#x27;, &#x27;真&#x27;, &#x27;不&#x27;, &#x27;錯&#x27;], [&#x27;，&#x27;], [&#x27;早&#x27;, &#x27;上&#x27;, &#x27;好&#x27;, &#x27;！&#x27;]]</span></span><br></pre></td></tr></table></figure><h4 id="some">some</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    判斷是否有元素否符合函示條件</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.some(callback(item[, index, array), thisArg])</span></span><br><span class="line"><span class="comment"> *      - callback : 回調函式，該函式會對每一個元素調用一次。</span></span><br><span class="line"><span class="comment"> *        - item : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *        - index [可選] : 當前遍歷到的元素索引值</span></span><br><span class="line"><span class="comment"> *        - array [可選] : 調用 forEach 的陣列自身</span></span><br><span class="line"><span class="comment"> *      - thisArg [可選] : 指定 callback 裡的 this 值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    若有元素符合函示條件則返回 true　否則返回 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.some(<span class="function"><span class="params">item</span> =&gt;</span> item === <span class="number">4</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.some(<span class="function"><span class="params">item</span> =&gt;</span> item === <span class="number">6</span>)) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="every">every</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    判斷所有元素是否符合函示條件</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.every(callback(item[, index, array), thisArg])</span></span><br><span class="line"><span class="comment"> *      - callback : 回調函式，該函式會對每一個元素調用一次。</span></span><br><span class="line"><span class="comment"> *        - item : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *        - index [可選] : 當前遍歷到的元素索引值</span></span><br><span class="line"><span class="comment"> *        - array [可選] : 調用 forEach 的陣列自身</span></span><br><span class="line"><span class="comment"> *      - thisArg [可選] : 指定 callback 裡的 this 值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    若有元素符合函示條件則返回 true　否則返回 false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.every(<span class="function"><span class="params">item</span> =&gt;</span> <span class="keyword">typeof</span> item === <span class="string">&#x27;number&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.every(<span class="function"><span class="params">item</span> =&gt;</span> item === <span class="number">4</span>)) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="復製">復製</h3><h4 id="slice">slice</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    淺複製陣列並返回新陣列，可指定開始與結束索引值。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.slice([start, end])</span></span><br><span class="line"><span class="comment"> *      - start [可選] : 開始複製的索引值；預設為 0</span></span><br><span class="line"><span class="comment"> *      - end [可選] : 結束複製的索引值（不包括結束索引值）；預設為數組長度</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    淺複製後的 新陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.slice()) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.slice(<span class="number">1</span>, <span class="number">3</span>)) <span class="comment">// [2, 3]</span></span><br></pre></td></tr></table></figure><h4 id="concat">concat</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    複製多個陣列，並合併後返回</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.concat(arg[, argN...])</span></span><br><span class="line"><span class="comment"> *      - arg : 合並的第一個參數</span></span><br><span class="line"><span class="comment"> *      - argN [可選] : 合並的其他參數</span></span><br><span class="line"><span class="comment"> *        （參數可以是 陣列、值）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    返回合併後的 新陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.concat(arr2))</span><br><span class="line"><span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1.concat(arr2, <span class="number">11</span>, [<span class="number">12</span>], [[<span class="number">13</span>]]))</span><br><span class="line"><span class="comment">// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, [13]]</span></span><br></pre></td></tr></table></figure><h4 id="copyWithin">copyWithin</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    複製陣列某部分的元素，並覆蓋到指定的索引值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    array.copyWithin(target[, start, end])</span></span><br><span class="line"><span class="comment"> *      - target : 被覆蓋的開始索引值</span></span><br><span class="line"><span class="comment"> *      - start [可選] : 開始複製索引值；預設為 0</span></span><br><span class="line"><span class="comment"> *      - end [可選] : 結束複製索引值（不包括結束索引值）；預設為原陣列長度 （.length）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    返回覆蓋後的 原陣列</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法會修改 原陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.copyWithin(<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>)) <span class="comment">// [1, 4, 3, 4, 5]</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.copyWithin(<span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>)) <span class="comment">// [1, 4, 1, 4, 5]</span></span><br></pre></td></tr></table></figure><h3 id="其他">其他</h3><h4 id="Array-isArray">Array.isArray</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    判斷參數是否為陣列</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    Array.isArray(value)</span></span><br><span class="line"><span class="comment"> *      - value : 被檢測的值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    若為陣列則返回 true　否則返回 false</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法不在實例物件上</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.isArray(arr1)) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.isArray(<span class="string">&#x27;[1, 2, 3, 4, 5]&#x27;</span>)) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="Array-from">Array.from</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    可以將偽陣列物件、可疊代物件，轉換成新的陣列</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    Array.from(arrayLike[, mapFn(item, index, array), thisArg])</span></span><br><span class="line"><span class="comment"> *      - arrayLike : 被轉換的 偽陣列物件 或 可疊代物件</span></span><br><span class="line"><span class="comment"> *      - mapFn [可選] : 類似 map 方法裡的 callback 函示，會對每個元素調用</span></span><br><span class="line"><span class="comment"> *        - item : 當前遍歷到的元素</span></span><br><span class="line"><span class="comment"> *        - index [可選] : 當前遍歷到的元素索引值</span></span><br><span class="line"><span class="comment"> *        - array [可選] : 注意：這裡的 array 是 undefined</span></span><br><span class="line"><span class="comment"> *      - thisArg [可選] : 指定 mapFn 裡的 this 值</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    返回轉換 偽陣列物件 或 可疊代物件 後的新陣列</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    該方法不在實例物件上</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(<span class="string">&#x27;Hello&#x27;</span>)) <span class="comment">// [&#x27;H&#x27;, &#x27;e&#x27;, &#x27;l&#x27;, &#x27;l&#x27;, &#x27;o&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], <span class="function"><span class="params">item</span> =&gt;</span> item * <span class="number">2</span>)) <span class="comment">// [2, 4, 6]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用 偽陣列物件 的特性</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.from(&#123; <span class="attr">length</span>: <span class="number">5</span> &#125;, <span class="function"><span class="params">_</span> =&gt;</span> <span class="number">1</span>)) <span class="comment">// [1, 1, 1, 1, 1]</span></span><br></pre></td></tr></table></figure><h4 id="Array-of">Array.of</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    用於創建新的陣列，不需考慮參數的數量或類型。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    Array.of(elemN)</span></span><br><span class="line"><span class="comment"> *      - elemN : 任意參數</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    返回新陣列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.of(<span class="number">3</span>)) <span class="comment">// [3]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)) <span class="comment">// [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 對比 Array 構造函式</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>(<span class="number">3</span>)) <span class="comment">// [ , , ] // 注意：這裡是創建了空位，並不是 3 個 undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Array</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)) <span class="comment">// [1, 2, 3]</span></span><br></pre></td></tr></table></figure><h4 id="split-join">split / join</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 說明：</span></span><br><span class="line"><span class="comment"> *    - string.split : 分割字符串並返回陣列。</span></span><br><span class="line"><span class="comment"> *    - array.join : 將陣列串接並返回字符串。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 語法：</span></span><br><span class="line"><span class="comment"> *    string.split([separator, limit])</span></span><br><span class="line"><span class="comment"> *      - separator [可選] : 指定分割用的字符串（也可以是正則表達式）；</span></span><br><span class="line"><span class="comment"> *          省略則返回的陣列包含一個由整個字符串組成的元素。</span></span><br><span class="line"><span class="comment"> *      - limit [可選] : 限制返回分割的元素數量。（非負整數）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *    array.join([separator])</span></span><br><span class="line"><span class="comment"> *      - separator [可選] : 指定元素串接之間的字符；預設為陣列用的逗號（,）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 返回值：</span></span><br><span class="line"><span class="comment"> *    - string.split : 返回以分隔字符分割的陣列</span></span><br><span class="line"><span class="comment"> *    - array.join : 返回以特定字符串接的字符串</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 注意：</span></span><br><span class="line"><span class="comment"> *    string.split 是字符串方法。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> str = <span class="string">&#x27;Hello World&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(str.split()) <span class="comment">// [&#x27;Hello World&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(str.split(<span class="string">&#x27;&#x27;</span>, <span class="number">5</span>)) <span class="comment">// [&#x27;H&#x27;, &#x27;e&#x27;, &#x27;l&#x27;, &#x27;l&#x27;, &#x27;o&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(str.split(<span class="string">&#x27;o&#x27;</span>)) <span class="comment">// [&#x27;Hell&#x27;, &#x27;W&#x27;, &#x27;rld&#x27;]</span></span><br><span class="line"><span class="built_in">console</span>.log(str.split(<span class="string">&#x27; &#x27;</span>)) <span class="comment">// [&#x27;Hello&#x27;, &#x27;World&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(str) <span class="comment">// &#x27;Hello World&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1.join()) <span class="comment">// &#x27;1,2,3,4,5&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.join(<span class="string">&#x27;&#x27;</span>)) <span class="comment">// &#x27;12345&#x27;</span></span><br><span class="line"><span class="built_in">console</span>.log(arr1.join(<span class="string">&#x27;-&#x27;</span>)) <span class="comment">// &#x27;1-2-3-4-5&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(arr1) <span class="comment">// [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure><hr><p>封面來源 ：</p><ul><li><a href="https://www.pixiv.net/artworks/89478038">もち - 湊あくあ~</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 網頁前端 </category>
          
          <category> 筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 常用指令</title>
      <link href="posts/e35f/"/>
      <url>posts/e35f/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 設定本地 使用者 名稱/信箱 （初次使用必須設定）</span></span><br><span class="line">git config --global user.name</span><br><span class="line">git config --global user.email</span><br><span class="line"></span><br><span class="line"><span class="comment">## 初始化本地倉庫</span></span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看本地倉庫狀態</span></span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"><span class="comment">## 追蹤檔案至暫存區</span></span><br><span class="line">git add <span class="string">&#x27;檔案名稱&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 提交至本地庫</span></span><br><span class="line">git commit -m <span class="string">&#x27;日誌訊息&#x27;</span> <span class="string">&#x27;檔案名稱&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看日誌</span></span><br><span class="line">git reflog</span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看詳細日誌</span></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 版本穿梭</span></span><br><span class="line">git reset --hard <span class="string">&#x27;版本號&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 撤回上一個 commit</span></span><br><span class="line">git reset --soft HEAD^</span><br><span class="line"></span><br><span class="line"><span class="comment">## === 分支 ===</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 創建分支</span></span><br><span class="line">git branch <span class="string">&#x27;分支名稱&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看分支</span></span><br><span class="line">git branch</span><br><span class="line"></span><br><span class="line"><span class="comment">## 切換分支（切換至目標分支）</span></span><br><span class="line">git checkout <span class="string">&#x27;分支名稱&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##　合併分支（將目標分支合併至當前分支）</span></span><br><span class="line">git merge <span class="string">&#x27;分支名稱&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## === 遠程倉庫 ===</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 查看當前所有 遠程倉庫地址別名</span></span><br><span class="line">git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment">## 新增地址別名</span></span><br><span class="line">git remote add <span class="string">&#x27;地址別名&#x27;</span> <span class="string">&#x27;遠程倉庫地址&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 推送 本地&quot;分支&quot; 的內容至 遠程倉庫</span></span><br><span class="line">git push <span class="string">&#x27;地址別名&#x27;</span> <span class="string">&#x27;分支名稱&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 將 遠程倉庫 的內容 復製到本地</span></span><br><span class="line">git <span class="built_in">clone</span> <span class="string">&#x27;遠程倉庫地址&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 將 遠程倉庫分支 的最新內容拉取下來後與 當前本地分支合併</span></span><br><span class="line">git pull <span class="string">&#x27;遠程倉庫 地址/別名&#x27;</span> <span class="string">&#x27;遠程分支名稱&#x27;</span></span><br></pre></td></tr></table></figure><hr><p>封面來源 ：</p><ul><li><a href="https://www.pixiv.net/artworks/86561567">SuperPig - ホロライブ！</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
          <category> 筆記 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
